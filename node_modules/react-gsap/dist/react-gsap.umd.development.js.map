{"version":3,"file":"react-gsap.umd.development.js","sources":["../src/types.ts","../src/helper.ts","../src/Provider.tsx","../src/plugins/PlugInSvgDraw.ts","../src/plugins/PlugInCount.ts","../src/Tween.tsx","../src/Timeline.tsx","../src/tools/Reveal.tsx","../src/tools/SplitText.tsx","../src/tools/Controls.tsx"],"sourcesContent":["export enum PlayState {\n  play = 'play',\n  reverse = 'reverse',\n  stop = 'stop',\n  pause = 'pause',\n}\n","import { gsap } from 'gsap';\nimport { PlayState } from './types';\n\nconst setPlayState = (\n  playState?: PlayState,\n  prevPlayState?: PlayState | null,\n  tween: any = null\n) => {\n  if (tween && playState && playState !== prevPlayState) {\n    if (playState === PlayState.play) {\n      if (prevPlayState === PlayState.pause || prevPlayState === PlayState.reverse) {\n        tween.play();\n      } else {\n        tween.restart(true);\n      }\n    } else if (playState === PlayState.reverse) {\n      if (prevPlayState === PlayState.pause || prevPlayState === PlayState.play) {\n        tween.reverse();\n      } else {\n        tween.reverse(0);\n      }\n    } else if (playState === PlayState.stop) {\n      tween.pause(0);\n    } else if (playState === PlayState.pause) {\n      tween.pause();\n    }\n  }\n};\n\nconst getTweenFunction = (targets: any, props: any): gsap.core.Tween | gsap.core.Timeline => {\n  const {\n    children,\n    wrapper,\n\n    duration = 1,\n    from,\n    to,\n\n    stagger,\n\n    progress,\n    totalProgress,\n    playState,\n    disabled,\n    onlyInvalidateTo,\n\n    onCompleteAll,\n    onCompleteAllParams,\n    onCompleteAllScope,\n    onStartAll,\n\n    position,\n    target,\n\n    ...vars\n  } = props;\n\n  let tweenFunction: gsap.core.Tween | gsap.core.Timeline;\n\n  if (from && to) {\n    tweenFunction = gsap.fromTo(targets, from, { stagger, duration, ...to, ...vars });\n  } else if (to) {\n    tweenFunction = gsap.to(targets, { stagger, duration, ...to, ...vars });\n  } else {\n    tweenFunction = gsap.from(targets, { stagger, duration, ...from, ...vars });\n  }\n\n  // if multiple tweens (stagger), wrap them in a timeline\n  // TODO: if it's already an timeline add event handlers\n  if (Array.isArray(tweenFunction)) {\n    tweenFunction.forEach(t => {\n      t.paused(false);\n    });\n    tweenFunction = gsap.timeline({\n      ...vars,\n      tweens: tweenFunction,\n      smoothChildTiming: true,\n      onComplete: onCompleteAll,\n      onCompleteParams: onCompleteAllParams,\n      onCompleteScope: onCompleteAllScope,\n      onStart: onStartAll,\n    });\n  }\n\n  // props at mount\n  if (progress) {\n    tweenFunction.progress(progress);\n  }\n  if (totalProgress) {\n    tweenFunction.totalProgress(totalProgress);\n  }\n  if (playState) {\n    setPlayState(playState, null, tweenFunction);\n  }\n\n  return tweenFunction;\n};\n\nconst callTweenFunction = (\n  tweenFunction: any,\n  functionName: string,\n  params: Array<any> | undefined = undefined,\n  returnFunction: string | undefined = undefined\n): void => {\n  if (Array.isArray(tweenFunction)) {\n    tweenFunction.forEach(tween => {\n      if (!params && returnFunction) {\n        params = [tween[returnFunction].apply(tween)];\n      }\n      tween[functionName].apply(tween, params);\n    });\n  } else {\n    if (!params && returnFunction) {\n      params = [tweenFunction[returnFunction].apply(tweenFunction)];\n    }\n    tweenFunction[functionName].apply(tweenFunction, params);\n  }\n};\n\nconst isEqual = (obj1: any, obj2: any) => {\n  // very easy equal check\n  // attention: if the order of properties are different it returns false\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n};\n\nconst refOrInnerRef = (child: any) => {\n  if (child.type.$$typeof && child.type.$$typeof.toString() === 'Symbol(react.forward_ref)') {\n    return 'ref';\n  }\n\n  // styled-components < 4\n  if (child.type.styledComponentId) {\n    return 'innerRef';\n  }\n\n  return 'ref';\n};\n\nconst getRefProp = (child: any, addTarget: (target: any) => void) => {\n  if (child.props.innerRef) {\n    return {\n      innerRef: (target: any) => {\n        addTarget(target);\n        const { innerRef } = child.props;\n        if (typeof innerRef === 'function') innerRef(target);\n        else if (innerRef) innerRef.current = target;\n      },\n    };\n  }\n\n  return {\n    ref: (target: any) => {\n      addTarget(target);\n      const { ref } = child;\n      if (typeof ref === 'function') ref(target);\n      else if (ref) ref.current = target;\n    },\n  };\n};\n\nconst getTargetRefProp = (child: any, setTarget: (key: string, target: any) => void) => {\n  return {\n    // ref: (target: any) => {\n    //   const { ref } = child;\n    //\n    //   if (target) {\n    //     Object.keys(target).forEach(key => {\n    //       const elementRef = target[key];\n    //       if (typeof elementRef === 'object' && elementRef.current) {\n    //         setTarget(key, elementRef.current);\n    //       }\n    //     });\n    //   }\n    //\n    //   if (typeof ref === 'function') ref(target);\n    //   else if (ref) ref.current = target;\n    // },\n    // Old version: Can we make it work for both variants?\n    ref: {\n      set: setTarget,\n    },\n  };\n};\n\nconst nullishCoalescing = <T, R>(value: T, ifNullish: R): T | R => {\n  if (value === null || typeof value === 'undefined') {\n    return ifNullish;\n  }\n  return value;\n};\n\nexport {\n  getTweenFunction,\n  callTweenFunction,\n  setPlayState,\n  isEqual,\n  refOrInnerRef,\n  getRefProp,\n  getTargetRefProp,\n  nullishCoalescing,\n};\n","import React from 'react';\n\nexport type ContextProps = {\n  registerConsumer: (consumer: any) => void;\n};\n\nexport const Context = React.createContext<ContextProps>({ registerConsumer: () => {} });\n\nabstract class Provider<T, S = {}> extends React.Component<T, S> {\n  consumers: any[];\n\n  constructor(props: T) {\n    super(props);\n    this.consumers = [];\n\n    this.registerConsumer = this.registerConsumer.bind(this);\n    this.getContextValue = this.getContextValue.bind(this);\n    this.renderWithProvider = this.renderWithProvider.bind(this);\n  }\n\n  registerConsumer(consumer: any) {\n    this.consumers.push(consumer);\n  }\n\n  getContextValue() {\n    return {\n      registerConsumer: this.registerConsumer,\n    };\n  }\n\n  renderWithProvider(output: any) {\n    return <Context.Provider value={this.getContextValue()}>{output}</Context.Provider>;\n  }\n}\n\nexport default Provider;\n","import { nullishCoalescing } from '../helper';\n\nlet gsap: any;\nlet _interpolate: any;\nlet _getProp: any;\nconst _getGSAP = () =>\n  gsap || (typeof window !== 'undefined' && (gsap = window.gsap) && gsap.registerPlugin && gsap);\n\ntype Point = {\n  x: number;\n  y: number;\n};\n\nfunction getDistance(p1: DOMPoint | Point, p2: DOMPoint | Point) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el: SVGCircleElement) {\n  return 2 * Math.PI * parseFloat(nullishCoalescing(el.getAttribute('r'), '1') || '0');\n}\n\nfunction getRectLength(el: SVGRectElement) {\n  return (\n    parseFloat(nullishCoalescing(el.getAttribute('width'), '1') || '0') * 2 +\n    parseFloat(nullishCoalescing(el.getAttribute('height'), '1') || '0') * 2\n  );\n}\n\nfunction getLineLength(el: SVGLineElement) {\n  return getDistance(\n    {\n      x: parseFloat(nullishCoalescing(el.getAttribute('x1'), '1') || '0'),\n      y: parseFloat(nullishCoalescing(el.getAttribute('y1'), '1') || '0'),\n    },\n    {\n      x: parseFloat(nullishCoalescing(el.getAttribute('x2'), '1') || '0'),\n      y: parseFloat(nullishCoalescing(el.getAttribute('y2'), '1') || '0'),\n    }\n  );\n}\n\nfunction getPolylineLength(el: SVGPolylineElement) {\n  const points = el.points;\n  let totalLength = 0;\n  let previousPos: DOMPoint | undefined = undefined;\n  for (let i = 0; i < points.numberOfItems; i++) {\n    const currentPos = points.getItem(i);\n    if (previousPos) totalLength += getDistance(previousPos, currentPos);\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el: SVGPolylineElement) {\n  const points = el.points;\n  return (\n    getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0))\n  );\n}\n\n// if path is splitted into multiple move commands then return longest path\nfunction getPathLength(el: SVGPathElement) {\n  if (!el.hasAttribute('d')) {\n    return el.getTotalLength();\n  }\n  const d = el.getAttribute('d');\n  const pathString = d ? d.replace(/m/gi, 'M') : null;\n\n  if (!pathString) {\n    return el.getTotalLength();\n  }\n\n  const paths = pathString\n    .split('M')\n    .filter(path => path !== '')\n    .map(path => `M${path}`);\n\n  if (paths.length === 1) {\n    return el.getTotalLength();\n  }\n\n  let maxLength = 0;\n\n  paths.forEach(path => {\n    const pathElement = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    pathElement.setAttribute('d', path);\n    maxLength = Math.max(maxLength, pathElement.getTotalLength());\n  });\n\n  return maxLength;\n}\n\nfunction getTotalLength(el: any) {\n  if (el.getTotalLength) {\n    return getPathLength(el);\n  }\n  switch (el.tagName.toLowerCase()) {\n    case 'circle':\n      return getCircleLength(el);\n    case 'rect':\n      return getRectLength(el);\n    case 'line':\n      return getLineLength(el);\n    case 'polyline':\n      return getPolylineLength(el);\n    case 'polygon':\n      return getPolygonLength(el);\n    default:\n      return 0;\n  }\n}\n\nexport const SvgDrawPlugin = {\n  version: '2.0.0',\n  name: 'svgDraw',\n  register(core: any, Plugin: any, propTween: any) {\n    gsap = core;\n    _interpolate = gsap.utils.interpolate;\n    _getProp = gsap.getProperty;\n  },\n  init(target: any, value: number, _tween: any, index: number, targets: any) {\n    const length = getTotalLength(target);\n\n    let lengthParam = value;\n    let offsetParam = 0;\n\n    if (Array.isArray(value)) {\n      lengthParam = value[0];\n      if (value.length >= 2) {\n        offsetParam = value[1] * -1;\n      }\n    }\n\n    let data = this;\n    data.target = target;\n    data.strokeDashoffset = _interpolate(\n      _getProp(target, 'stroke-dashoffset'),\n      length * offsetParam\n    );\n    data.strokeDasharray = _interpolate(_getProp(target, 'stroke-dasharray'), [\n      lengthParam * length,\n      length,\n    ]);\n  },\n  render(progress: number, data: any) {\n    data.target.setAttribute('stroke-dashoffset', data.strokeDashoffset(progress));\n    data.target.setAttribute('stroke-dasharray', data.strokeDasharray(progress));\n  },\n};\n\n_getGSAP() && gsap.registerPlugin(SvgDrawPlugin);\n\nexport { SvgDrawPlugin as default };\n","import { nullishCoalescing } from '../helper';\n\nlet gsap: any;\nlet _interpolate: any;\nlet _format: any;\nconst _getGSAP = () =>\n  gsap || (typeof window !== 'undefined' && (gsap = window.gsap) && gsap.registerPlugin && gsap);\n\ntype Prop =\n  | {\n      value: string | number;\n      format: () => (value: string | number) => number | string;\n    }\n  | number\n  | string;\n\nexport const CountPlugin = {\n  version: '1.0.0',\n  name: 'count',\n  register(core: any, Plugin: any, propTween: any) {\n    gsap = core;\n    _interpolate = gsap.utils.interpolate;\n    _format = (value: string | number) => parseInt(value.toString(), 10);\n  },\n  init(target: any, value: Prop, _tween: any, index: number, targets: any) {\n    let inputValue = value;\n    let format = _format;\n    if (typeof value === 'object') {\n      inputValue = nullishCoalescing(value.value, 0);\n      if (value.format) {\n        format = value.format;\n      }\n    }\n\n    const initialCount = parseFloat(target.innerText);\n\n    let data = this;\n    data.target = target;\n    data.count = _interpolate(initialCount, parseFloat(inputValue.toString()));\n    data.format = format;\n  },\n  render(progress: number, data: any) {\n    data.target.innerText = data.format(data.count(progress));\n  },\n};\n\n_getGSAP() && gsap.registerPlugin(CountPlugin);\n\nexport { CountPlugin as default };\n","import React, { Fragment, ReactElement } from 'react';\nimport { gsap } from 'gsap';\nimport { PlayState } from './types';\nimport { getTweenFunction, setPlayState, isEqual, getRefProp } from './helper';\nimport { Context } from './Provider';\n\nimport SvgDrawPlugin from './plugins/PlugInSvgDraw';\nimport CountPlugin from './plugins/PlugInCount';\n\n// @ts-ignore\ngsap.registerPlugin(SvgDrawPlugin);\n\n// @ts-ignore\ngsap.registerPlugin(CountPlugin);\n\ntype StaggerFunction = (index: number, target: any, list: any) => number;\ntype StaggerFromValues = 'start' | 'center' | 'edges' | 'random' | 'end';\ntype EaseFunction = (value: number) => number;\n\nexport type Stagger =\n  | {\n      amount?: number;\n      each?: number;\n      from?: StaggerFromValues | number | [number, number];\n      grid?: [number, number] | 'auto';\n      axis?: 'x' | 'y';\n      ease?: string | EaseFunction;\n      repeat?: number;\n      yoyo?: boolean;\n      [prop: string]: any;\n    }\n  | number\n  | StaggerFunction;\n\nexport type TweenProps = {\n  /** One or multiple \"refable\" components  */\n  children?: React.ReactNode;\n  wrapper?: React.ReactElement;\n  target?: number | string;\n  position?: string | number;\n\n  from?: any;\n  to?: any;\n  stagger?: Stagger;\n\n  duration?: number;\n  progress?: number;\n  totalProgress?: number;\n  playState?: PlayState;\n\n  disabled?: boolean;\n  onlyInvalidateTo?: boolean;\n\n  [prop: string]: any;\n};\n\nclass Tween extends React.Component<TweenProps, {}> {\n  static displayName = 'Tween';\n  static contextType = Context;\n\n  tween: any;\n  targets: any[] = [];\n\n  constructor(props: TweenProps) {\n    super(props);\n\n    this.addTarget = this.addTarget.bind(this);\n  }\n\n  setPlayState(playState: PlayState) {\n    const { playState: previousPlayState } = this.props;\n    setPlayState(playState, previousPlayState, this.tween);\n  }\n\n  componentDidMount() {\n    this.createTween();\n  }\n\n  componentWillUnmount() {\n    if (this.tween) {\n      this.tween.kill();\n    }\n  }\n\n  getSnapshotBeforeUpdate() {\n    this.targets = [];\n    return null;\n  }\n\n  componentDidUpdate(prevProps: TweenProps) {\n    const {\n      children,\n      wrapper,\n\n      duration,\n      from,\n      to,\n      stagger,\n\n      progress,\n      totalProgress,\n      playState,\n      disabled,\n      onlyInvalidateTo,\n\n      onCompleteAll,\n      onCompleteAllParams,\n      onCompleteAllScope,\n      onStartAll,\n\n      position,\n      target,\n\n      ...vars\n    } = this.props;\n\n    // if children change create a new tween\n    // TODO: replace easy length check with fast equal check\n    if (React.Children.count(prevProps.children) !== React.Children.count(children)) {\n      this.createTween();\n    }\n\n    if (disabled) {\n      return;\n    }\n\n    // execute function calls\n    if (progress !== prevProps.progress) {\n      this.tween.progress(progress);\n    }\n    if (totalProgress !== prevProps.totalProgress) {\n      this.tween.totalProgress(totalProgress);\n    }\n    if (duration !== prevProps.duration) {\n      this.tween.duration(duration);\n    }\n    // if \"to\" props are changed: reinit and restart tween\n    if (!isEqual(to, prevProps.to)) {\n      // is Tween\n      if (!this.tween.getChildren) {\n        this.tween.vars = { ...to, ...vars };\n\n        if (onlyInvalidateTo) {\n          var progressTmp = this.tween.progress();\n          this.tween\n            .progress(0)\n            .invalidate()\n            .progress(progressTmp);\n        } else {\n          this.tween.invalidate();\n        }\n      }\n      // is Timeline\n      // TODO: not yet ready\n      else {\n        let delay = 0;\n        this.tween.getChildren(false, true, false).forEach((tween: any) => {\n          tween.vars = { ...to, ...vars, ...{ delay } };\n          tween.invalidate();\n          // delay += stagger || 0;\n        });\n      }\n\n      if (!this.tween.paused()) {\n        this.tween.restart();\n      }\n    }\n\n    setPlayState(playState, prevProps.playState, this.tween);\n  }\n\n  createTween() {\n    if (this.tween) {\n      this.tween.kill();\n    }\n\n    if (this.props.children) {\n      this.tween = getTweenFunction(this.targets, this.props);\n    } else {\n      // why this is needed?\n      this.tween = () => {};\n    }\n\n    this.context.registerConsumer(this);\n  }\n\n  getGSAP() {\n    return this.tween;\n  }\n\n  setGSAP(tween: any) {\n    this.tween = tween;\n  }\n\n  addTarget(target: any) {\n    // target is null at unmount\n    if (target !== null) {\n      this.targets.push(target);\n    }\n  }\n\n  getTargets() {\n    return this.targets;\n  }\n\n  render() {\n    let { children, wrapper } = this.props;\n\n    const output = (\n      <Fragment>\n        {React.Children.map(children, child => {\n          return React.cloneElement(child as ReactElement, getRefProp(child, this.addTarget));\n        })}\n      </Fragment>\n    );\n\n    if (wrapper) {\n      return React.cloneElement(wrapper, [], output);\n    }\n\n    return output;\n  }\n}\n\nexport default Tween;\n","import React, { Fragment, ReactNode, ReactElement } from 'react';\nimport { gsap } from 'gsap';\nimport { isForwardRef, isFragment } from 'react-is';\nimport { PlayState } from './types';\nimport {\n  getTweenFunction,\n  setPlayState,\n  nullishCoalescing,\n  getRefProp,\n  getTargetRefProp,\n} from './helper';\nimport Provider, { Context } from './Provider';\nimport { TweenProps } from './Tween';\n\ntype Label = {\n  label: string;\n  position: string | number;\n};\n\nexport type Targets = Map<string | number, ReactElement | ReactElement[]>;\nexport type TargetsRef = {\n  set: (key: string, target: any) => void;\n};\n\nexport type Target = ReactElement | null;\n\nexport type TimelineProps = {\n  children: ReactNode;\n  wrapper?: ReactElement;\n  target?: Target;\n  position?: string | number;\n  labels?: Label[];\n\n  duration?: number;\n  progress?: number;\n  totalProgress?: number;\n  playState?: PlayState;\n\n  [prop: string]: any;\n};\n\nclass Timeline extends Provider<TimelineProps> {\n  static displayName = 'Timeline';\n  static contextType = Context;\n\n  timeline: any;\n  targets: Targets = new Map();\n\n  constructor(props: TimelineProps) {\n    super(props);\n\n    this.addTarget = this.addTarget.bind(this);\n    this.setTarget = this.setTarget.bind(this);\n  }\n\n  setPlayState(playState: PlayState) {\n    const { playState: previousPlayState } = this.props;\n    setPlayState(playState, previousPlayState, this.timeline);\n  }\n\n  componentDidMount() {\n    this.createTimeline();\n  }\n\n  componentWillUnmount() {\n    this.timeline.kill();\n  }\n\n  getSnapshotBeforeUpdate() {\n    this.targets = new Map();\n    return null;\n  }\n\n  componentDidUpdate(prevProps: TimelineProps) {\n    const { children, duration, progress, totalProgress, playState } = this.props;\n\n    // if children change create a new timeline\n    // TODO: replace easy length check with fast equal check\n    // TODO: same for props.target?\n    if (React.Children.count(prevProps.children) !== React.Children.count(children)) {\n      this.createTimeline();\n    }\n\n    // execute function calls\n    if (progress !== prevProps.progress) {\n      this.timeline.progress(progress);\n    }\n    if (totalProgress !== prevProps.totalProgress) {\n      this.timeline.totalProgress(totalProgress);\n    }\n    if (duration !== prevProps.duration) {\n      this.timeline.duration(duration);\n    }\n\n    setPlayState(playState, prevProps.playState, this.timeline);\n  }\n\n  createTimeline() {\n    const {\n      children,\n      target,\n      duration,\n      progress,\n      totalProgress,\n      playState,\n      labels,\n      position,\n      ...vars\n    } = this.props;\n\n    if (this.timeline) {\n      this.timeline.kill();\n    }\n\n    // init timeline\n    this.timeline = gsap.timeline({\n      smoothChildTiming: true,\n      ...vars,\n    });\n\n    if (labels) {\n      labels.forEach(label => {\n        this.timeline.addLabel(label.label, label.position);\n      });\n    }\n\n    // add tweens or nested timelines to timeline\n    this.consumers.forEach(consumer => {\n      // Tween with no children -> control Timeline target\n      if (consumer.tween && !consumer.props.children) {\n        const { position, target, stagger, ...vars } = consumer.props as TweenProps;\n\n        // get target if not nullish\n        let targets = null;\n        if (target !== null && typeof target !== 'undefined') {\n          targets = this.targets.get(target);\n        }\n\n        // if no target found -> take all Timeline targets as target\n        const tween = getTweenFunction(\n          // @ts-ignore\n          nullishCoalescing(targets, Array.from(this.targets.values())),\n          {\n            stagger,\n            ...vars,\n          }\n        );\n        this.timeline.add(tween, nullishCoalescing(position, '+=0'));\n        consumer.setGSAP(tween);\n      } else {\n        const { position } = consumer.props;\n        this.timeline.add(consumer.getGSAP(), nullishCoalescing(position, '+=0'));\n      }\n    });\n\n    // props at mount\n    if (duration) {\n      this.timeline.duration(duration);\n    }\n    if (progress) {\n      this.timeline.progress(progress);\n    }\n    if (totalProgress) {\n      this.timeline.totalProgress(totalProgress);\n    }\n    if (playState) {\n      this.setPlayState(playState);\n    }\n\n    this.context.registerConsumer(this);\n  }\n\n  getGSAP() {\n    return this.timeline;\n  }\n\n  addTarget(target: any) {\n    if (target !== null) {\n      this.targets.set(this.targets.size, target);\n    }\n  }\n\n  setTarget(key: string, target: any) {\n    if (target !== null) {\n      if (this.targets.has(key)) {\n        const targets = this.targets.get(key);\n        if (Array.isArray(targets)) {\n          this.targets.set(key, [...targets, ...target]);\n          return;\n        }\n      }\n      this.targets.set(key, target);\n    }\n  }\n\n  setTargets(targets: Targets) {\n    this.targets = targets;\n  }\n\n  getTargets() {\n    return this.targets;\n  }\n\n  cloneElement(child: any) {\n    // @ts-ignore\n    return React.cloneElement(child, getRefProp(child, this.addTarget));\n  }\n\n  renderTarget(target?: Target): ReactNode {\n    if (!target) {\n      return null;\n    }\n\n    // if is forwardRef clone and pass targets as ref\n    if (isForwardRef(target)) {\n      // @ts-ignore\n      return React.cloneElement(target, getTargetRefProp(target, this.setTarget));\n    }\n\n    // else iterate the first level of children and set targets\n    return (\n      <Fragment>\n        {/* First render the target */}\n        {React.Children.map<ReactElement, ReactElement>(target, child => {\n          if (isFragment(child)) {\n            return React.Children.map(child.props.children, fragmentChild => {\n              return this.cloneElement(fragmentChild);\n            });\n          }\n          return this.cloneElement(child);\n        })}\n      </Fragment>\n    );\n  }\n\n  render() {\n    let { target, children, wrapper } = this.props;\n\n    const renderedTarget = this.renderTarget(target);\n\n    let output = (\n      <Fragment>\n        {renderedTarget}\n        {children}\n      </Fragment>\n    );\n\n    if (wrapper) {\n      output = React.cloneElement(wrapper, [], output);\n    }\n\n    return this.renderWithProvider(output);\n  }\n}\n\nexport default Timeline;\n","import React from 'react';\nimport { gsap } from 'gsap';\nimport { nullishCoalescing } from '../helper';\nimport Provider from '../Provider';\n\nexport type RevealProps = {\n  children: React.ReactNode;\n  trigger: React.ReactElement | null;\n  repeat: boolean;\n  root: Element | null;\n  rootMargin: string;\n  threshold: number;\n};\n\nenum EntryState {\n  unknown,\n  entered,\n  exited,\n}\n\nclass Reveal extends Provider<RevealProps> {\n  static displayName = 'Reveal';\n\n  static defaultProps = {\n    trigger: null,\n    repeat: false,\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.66,\n  };\n\n  timeline: any;\n  triggerRef: HTMLElement | null = null;\n  observer: IntersectionObserver | null = null;\n\n  init() {\n    this.createTimeline();\n    this.createIntersectionObserver();\n  }\n\n  kill() {\n    this.killTimeline();\n    this.killIntersectionObserver();\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentWillUnmount() {\n    this.kill();\n  }\n\n  componentDidUpdate(prevProps: RevealProps) {\n    const { children, trigger } = this.props;\n\n    // if children change create a new timeline\n    // TODO: replace easy length check with fast equal check\n    // TODO: same for props.target?\n    if (React.Children.count(prevProps.children) !== React.Children.count(children)) {\n      this.init();\n    }\n\n    if (prevProps.trigger !== trigger) {\n      this.init();\n    }\n  }\n\n  createTimeline() {\n    this.killTimeline();\n\n    // init timeline\n    this.timeline = gsap.timeline({\n      smoothChildTiming: true,\n      paused: true,\n    });\n\n    // add consumers\n    this.consumers.forEach(consumer => {\n      const { position } = consumer.props;\n      this.timeline.add(consumer.getGSAP().play(), nullishCoalescing(position, 0));\n    });\n  }\n\n  killTimeline() {\n    if (this.timeline) {\n      this.timeline.kill();\n    }\n  }\n\n  createIntersectionObserver() {\n    let { root, rootMargin, threshold } = this.props;\n\n    const options = {\n      root,\n      rootMargin,\n      threshold: [0, threshold],\n    };\n\n    this.observer = new IntersectionObserver(this.intersectionObserverCallback, options);\n\n    // It would be better if we wouldn't need an extra wrapper.\n    // But it can be problematic for example with a fadeInLeft animation\n    // were the element is out of the viewport in the initial state.\n    // In this case there wouldn't be an intersection..\n    if (!this.triggerRef) {\n      this.consumers.forEach(consumer => {\n        consumer.getTargets().forEach((target: any) => {\n          this.observer && this.observer.observe(target);\n        });\n      });\n    } else {\n      this.observer && this.observer.observe(this.triggerRef);\n    }\n  }\n\n  killIntersectionObserver() {\n    this.unobserveAll();\n    this.observer = null;\n  }\n\n  unobserveAll() {\n    if (this.observer) {\n      if (!this.triggerRef) {\n        this.consumers.forEach(consumer => {\n          consumer.getTargets().forEach((target: any) => {\n            this.observer && this.observer.unobserve(target);\n          });\n        });\n      } else {\n        this.observer && this.observer.unobserve(this.triggerRef);\n      }\n    }\n  }\n\n  intersectionObserverCallback = (entries: any) => {\n    let { repeat, threshold } = this.props;\n    let state: EntryState = EntryState.unknown;\n\n    for (const entry of entries) {\n      if (entry.isIntersecting && entry.intersectionRatio >= threshold) {\n        this.timeline.play();\n        state = EntryState.entered;\n        break;\n      } else if (!entry.isIntersecting) {\n        state = EntryState.exited;\n        break;\n      }\n    }\n\n    if (!repeat && state === EntryState.entered) {\n      this.killIntersectionObserver();\n    } else if (repeat && state === EntryState.exited) {\n      this.timeline.pause(0);\n    }\n  };\n\n  getGSAP() {\n    return this.timeline;\n  }\n\n  render() {\n    let { children, trigger } = this.props;\n\n    let output = trigger ? (\n      <trigger.type {...trigger.props} ref={(trigger: HTMLElement) => (this.triggerRef = trigger)}>\n        {children}\n      </trigger.type>\n    ) : (\n      children\n    );\n\n    return this.renderWithProvider(output);\n  }\n}\n\nexport default Reveal;\n","import React from 'react';\n\ntype SplitWordsProps = {\n  children: React.ReactNode;\n  wrapper: React.ReactElement;\n  delimiter?: string;\n};\n\ntype SplitCharsProps = {\n  children: React.ReactNode;\n  wrapper: React.ReactElement;\n};\n\nconst escapeRegExp = (regExp: string) => {\n  var specialChars = ['$', '^', '*', '(', ')', '+', '[', ']', '{', '}', '\\\\', '|', '.', '?', '/'];\n  var regex = new RegExp('(\\\\' + specialChars.join('|\\\\') + ')', 'g');\n  return regExp.replace(regex, '\\\\$1');\n};\n\nexport const SplitWords = React.forwardRef<any, SplitWordsProps>(\n  ({ children, wrapper, delimiter = ' ' }, ref) => {\n    if (typeof children !== 'string') {\n      throw new Error('SplitWords only accepts a string as child.');\n    }\n    const words = children.split(new RegExp(`(${escapeRegExp(delimiter)})`, 'g'));\n    return (\n      <>\n        {words.map((word: string, i: number) => {\n          if (delimiter === ' ' && word === delimiter) {\n            return <React.Fragment key={i}> </React.Fragment>;\n          }\n          return React.cloneElement(wrapper, { ref, key: i }, word);\n        })}\n      </>\n    );\n  }\n);\n\nexport const SplitChars = React.forwardRef<any, SplitCharsProps>(({ children, wrapper }, ref) => {\n  if (typeof children !== 'string') {\n    throw new Error('SplitChars only accepts a string as child.');\n  }\n  return (\n    <>\n      {children\n        .split(\n          /(?=(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))/\n        )\n        .map((char: string, i: number) => {\n          // TODO: enhance check for space\n          if (char === ' ') {\n            return <React.Fragment key={i}> </React.Fragment>;\n          }\n          return React.cloneElement(wrapper, { ref, key: i }, char);\n        })}\n    </>\n  );\n});\n\nexport const SplitLetters = React.forwardRef((props: any, ref) => {\n  console.warn('Deprecation warning: Use SplitChars instead of SplitLetters');\n  return <SplitChars {...props} ref={ref} />;\n});\n","import React from 'react';\nimport { PlayState } from './../types';\nimport { setPlayState } from './../helper';\nimport Provider from '../Provider';\n\ntype ControlsProps = {\n  playState?: PlayState;\n};\n\ntype ControlsState = {\n  totalProgress: number;\n  playState?: PlayState;\n  prevPlayState?: PlayState;\n};\n\nclass Controls extends Provider<ControlsProps, ControlsState> {\n  gsap: any;\n  slider: any;\n  sliderTouched: boolean = false;\n\n  state = {\n    totalProgress: 0,\n    playState: undefined,\n    prevPlayState: undefined,\n  };\n\n  containerStyle = {\n    backgroundColor: '#f0f0f0',\n    padding: '10px 10px 0 10px',\n    marginTop: '10px',\n    position: 'relative' as 'relative',\n    zIndex: 2,\n    fontFamily: 'verdana, sans-serif',\n    fontSize: '16px',\n    border: '1px solid #ccc',\n  };\n\n  buttonContainerStyle = {\n    margin: '0',\n    display: 'flex',\n    flexWrap: 'wrap' as 'wrap',\n    justifyContent: 'space-between',\n  };\n\n  buttonStyle = {\n    border: '1px solid #999',\n    backgroundColor: '#f0f0f0',\n    padding: '5px',\n    margin: '10px 10px 10px 0',\n    cursor: 'pointer',\n  };\n\n  sliderStyle = {\n    margin: '0',\n    width: '100%',\n  };\n\n  playStateStyle = {\n    color: '#999',\n    margin: '10px 0',\n    fontSize: '14px',\n  };\n\n  componentDidMount() {\n    if (this.consumers.length) {\n      this.gsap = this.consumers[0];\n\n      const gsap = this.gsap.getGSAP();\n\n      if (gsap) {\n        gsap.eventCallback('onUpdate', this.onUpdate);\n\n        if (this.props.playState) {\n          this.setPlayState(this.props.playState);\n        } else {\n          // get child initial state\n          if (gsap.paused()) {\n            this.setPlayState(PlayState.pause);\n          } else if (gsap.reversed()) {\n            this.setPlayState(PlayState.reverse);\n          } else {\n            this.setPlayState(PlayState.play);\n          }\n        }\n\n        const totalProgress = gsap.totalProgress();\n        this.slider.value = totalProgress * 100;\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    this.onUpdate();\n  }\n\n  onUpdate = () => {\n    if (this.gsap && this.slider && !this.sliderTouched) {\n      const totalProgress = this.gsap.getGSAP().totalProgress();\n      this.slider.value = totalProgress * 100;\n    }\n  };\n\n  onChange = (event: any) => {\n    if (this.gsap && this.gsap.getGSAP()) {\n      this.gsap.getGSAP().totalProgress(event.target.value / 100);\n    }\n  };\n\n  setPlayState = (state: PlayState) => {\n    this.setState(prevState => {\n      return {\n        playState: state,\n        prevPlayState: prevState.playState,\n      };\n    });\n  };\n\n  getControls = (_totalProgress: any, playState: PlayState | undefined) => (\n    <div style={this.containerStyle}>\n      <input\n        ref={el => (this.slider = el)}\n        type=\"range\"\n        style={this.sliderStyle}\n        step=\"0.001\"\n        onChange={e => this.onChange(e)}\n        onMouseDown={() => (this.sliderTouched = true)}\n        onMouseUp={() => (this.sliderTouched = false)}\n      />\n      <div style={this.buttonContainerStyle}>\n        <div>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.play)}\n          >\n            Play\n          </button>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.reverse)}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.pause)}\n          >\n            Pause\n          </button>\n          <button\n            type=\"button\"\n            style={this.buttonStyle}\n            onClick={() => this.setPlayState(PlayState.stop)}\n          >\n            Stop\n          </button>\n        </div>\n        <span style={this.playStateStyle}>{playState}</span>\n      </div>\n    </div>\n  );\n\n  render() {\n    const { children } = this.props;\n    const { totalProgress, playState, prevPlayState } = this.state;\n\n    if (this.gsap) {\n      setPlayState(playState, prevPlayState, this.gsap.getGSAP());\n    }\n\n    return this.renderWithProvider(\n      <div>\n        {children}\n        {this.getControls(totalProgress, playState)}\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n"],"names":["PlayState","setPlayState","playState","prevPlayState","tween","play","pause","reverse","restart","stop","getTweenFunction","targets","props","duration","from","to","stagger","progress","totalProgress","disabled","onCompleteAll","onCompleteAllParams","onCompleteAllScope","onStartAll","position","vars","tweenFunction","gsap","fromTo","Array","isArray","forEach","t","paused","timeline","tweens","smoothChildTiming","onComplete","onCompleteParams","onCompleteScope","onStart","isEqual","obj1","obj2","JSON","stringify","getRefProp","child","addTarget","innerRef","target","current","ref","getTargetRefProp","setTarget","set","nullishCoalescing","value","ifNullish","Context","React","createContext","registerConsumer","Provider","consumers","bind","getContextValue","renderWithProvider","consumer","push","output","Component","_interpolate","_getProp","_getGSAP","window","registerPlugin","getDistance","p1","p2","Math","sqrt","pow","x","y","getCircleLength","el","PI","parseFloat","getAttribute","getRectLength","getLineLength","getPolylineLength","points","totalLength","previousPos","undefined","i","numberOfItems","currentPos","getItem","getPolygonLength","getPathLength","hasAttribute","getTotalLength","d","pathString","replace","paths","split","filter","path","map","length","maxLength","pathElement","document","createElementNS","setAttribute","max","tagName","toLowerCase","SvgDrawPlugin","version","name","register","core","Plugin","propTween","utils","interpolate","getProperty","init","_tween","index","lengthParam","offsetParam","data","strokeDashoffset","strokeDasharray","render","_format","CountPlugin","parseInt","toString","inputValue","format","initialCount","innerText","count","Tween","previousPlayState","componentDidMount","createTween","componentWillUnmount","kill","getSnapshotBeforeUpdate","componentDidUpdate","prevProps","children","wrapper","onlyInvalidateTo","Children","getChildren","progressTmp","invalidate","delay","context","getGSAP","setGSAP","getTargets","Fragment","cloneElement","Timeline","Map","createTimeline","labels","label","addLabel","get","values","add","size","key","has","setTargets","renderTarget","isForwardRef","isFragment","fragmentChild","renderedTarget","EntryState","Reveal","entries","repeat","threshold","state","unknown","entry","isIntersecting","intersectionRatio","entered","exited","killIntersectionObserver","createIntersectionObserver","killTimeline","trigger","root","rootMargin","options","observer","IntersectionObserver","intersectionObserverCallback","triggerRef","observe","unobserveAll","unobserve","type","escapeRegExp","regExp","specialChars","regex","RegExp","join","SplitWords","forwardRef","delimiter","Error","words","word","SplitChars","char","SplitLetters","console","warn","Controls","backgroundColor","padding","marginTop","zIndex","fontFamily","fontSize","border","margin","display","flexWrap","justifyContent","cursor","width","color","slider","sliderTouched","event","setState","prevState","_totalProgress","style","containerStyle","sliderStyle","step","onChange","e","onMouseDown","onMouseUp","buttonContainerStyle","buttonStyle","onClick","playStateStyle","eventCallback","onUpdate","reversed","getControls"],"mappings":"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"}